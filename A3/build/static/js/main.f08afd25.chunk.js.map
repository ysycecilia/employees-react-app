{"version":3,"sources":["components/TeamInfo.js","TeamApp.js","index.js"],"names":["useStyles","makeStyles","theme","card","maxWidth","margin","spacing","SaveButton","padding","typography","formControl","minWidth","marginBottom","TeamInfo","props","classes","_useState","useState","Team","Employees","_useState2","Object","slicedToArray","TeamMembers","setTeamMembers","_useState3","TeamLead","_useState4","setTeamLead","_useState5","Projects","map","assignedID","find","prj","_id","_useState6","setProjects","_useState7","_useState8","anchorEl","setAnchorEl","_useState9","_useState10","updatePopover","savedPopover","open","Boolean","EmployeeName","id","Array","isArray","emp","employee","FirstName","LastName","join","locateEmployee","ProjectName","assignedProject","assignedProjects","assignedPrj","react_default","a","createElement","Card","className","CardHeader","title","TeamName","action","Button","variant","button","onClick","event","currentTarget","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","put","Url","then","response","data","message","stop","apply","this","arguments","putData","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","CardContent","FormControl","Typography","color","Select","value","onChange","target","renderValue","selected","MenuItem","key","ListItemText","primary","multiple","url","TitleTheme","createMuiTheme","palette","main","contrastText","ReactDOM","render","Teams","loadTeams","loadEmployees","loadProjects","LoadStatus","setLoadStatus","useEffect","tms","get","sent","fetchData","MuiThemeProvider_default","Container","AppBar","position","Toolbar","Link","to","Box","display","alignContent","flexDirection","flexWrap","team","document","querySelector"],"mappings":"iSAcMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,IACVC,OAAQH,EAAMI,QAAQ,IAG1BC,WAAY,CACRC,QAASN,EAAMI,QAAQ,IAG3BG,WAAY,CACRD,QAASN,EAAMI,QAAQ,IAG3BI,YAAa,CACTN,SAAU,OACVO,SAAU,IACVC,aAAcV,EAAMI,QAAQ,OAKrB,SAASO,EAASC,GAC7B,IAAMC,EAAUf,IADoBgB,EAEEC,mBAASH,EAAMI,KAAKC,WAFtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAE7BO,EAF6BH,EAAA,GAEhBI,EAFgBJ,EAAA,GAAAK,EAGJR,mBAASH,EAAMI,KAAKQ,UAHhBC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAG7BC,EAH6BC,EAAA,GAGnBC,EAHmBD,EAAA,GAAAE,EAIJZ,mBAASH,EAAMI,KAAKY,SAASC,IAAI,SAAAC,GAAU,OAAIlB,EAAMgB,SAASG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAQH,OAJlFI,EAAAf,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAI7BC,EAJ6BM,EAAA,GAInBC,EAJmBD,EAAA,GAAAE,EAKJrB,mBAAS,MALLsB,EAAAlB,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,GAK7BE,EAL6BD,EAAA,GAKnBE,EALmBF,EAAA,GAAAG,EAMEzB,mBAAS,KANX0B,EAAAtB,OAAAC,EAAA,EAAAD,CAAAqB,EAAA,GAM7BE,EAN6BD,EAAA,GAMdE,EANcF,EAAA,GAO9BG,EAAOC,QAAQP,GAgBrB,SAASQ,EAAaC,GAClB,GAAIC,MAAMC,QAAQF,GACd,OAAOA,EAAGlB,IAAI,SAAAI,GAAG,OAAIrB,EAAMK,UAAUc,KAAK,SAAAmB,GAAG,OAAIA,EAAIjB,MAAQA,MAAMJ,IAAI,SAAAsB,GAAQ,OAAIA,EAASC,UAAY,IAAOD,EAASE,WAAUC,KAAK,MAC3I,IAAIC,EAAiB3C,EAAMK,UAAUc,KAAK,SAAAmB,GAAG,OAAIA,EAAIjB,MAAQc,IAC7D,OAAIQ,EACOA,EAAeH,UAAY,IAAMG,EAAeF,SAC3D,oEAGJ,SAASG,EAAYT,GACjB,IAAIC,MAAMC,QAAQF,GAKX,CACH,IAAIU,EAAkB7C,EAAMgB,SAASG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAQc,IAC7D,OAAIU,EACOA,EAAgBD,YAC3B,gEARA,IAAIE,EAAmBX,EAAGlB,IAAK,SAAA8B,GAAW,OAAI/C,EAAMgB,SAASG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAQ0B,EAAY1B,QACjG,GAAIyB,EACA,OAAOA,EAAiB7B,IAAI,SAAA8B,GAAW,OAAIA,EAAYH,cAAaF,KAAK,MAwBrF,OACIM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAWnD,EAAQZ,MACrB2D,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYC,MAAOtD,EAAMI,KAAKmD,SAClBC,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,QAAQ,WAAWN,UAAWnD,EAAQ0D,OAAQC,QApBlF,SAAoBC,GAChBlC,EAAYkC,EAAMC,eACL,eAAAC,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAA0D,EAAAhB,EAAAiB,KAAG,SAAAC,IAAA,OAAAF,EAAAhB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAENC,IAAMC,IAAIzE,EAAM0E,IAAM,QAAU1E,EAAMI,KAAKiB,IAC7C,CACIL,WACAX,UAAWI,EACXG,aAEH+D,KAAK,SAAAC,GAAQ,OAAI7C,EAAa6C,EAASC,KAAKC,WARrC,wBAAAT,EAAAU,SAAAZ,MAAH,yBAAAJ,EAAAiB,MAAAC,KAAAC,YAAA,EAUbC,KAQwB,QAGAnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACIjD,GA7DrB,KA8DqBH,KAAMA,EACNN,SAAUA,EACV2D,QArDhC,SAAqBxB,GACjBlC,EAAY,OAqDgB2D,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,WAEf1D,MAMzBkB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACI1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAajC,QAAQ,WAAWN,UAAWnD,EAAQL,aAC/CoD,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYlC,QAAQ,KAAKmC,MAAO,WAAhC,aACA7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACIC,MAAOnF,EACPoF,SAlFpB,SAA8BnC,GAC1B/C,EAAY+C,EAAMoC,OAAOF,QAkFTrC,QAAQ,WACRvB,GAAG,mBACH+D,YAAa,SAAAC,GAAQ,OAAIjE,EAAaiE,KACrCnG,EAAMK,UAAUY,IAAI,SAAAqB,GAAG,OAChBU,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAUC,IAAK/D,EAAIjB,IAAK0E,MAAOzD,EAAIjB,KAC/B2B,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAcC,QAASrE,EAAaI,EAAIjB,YAM5D2B,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAajC,QAAQ,WAAWN,UAAWnD,EAAQL,aAC/CoD,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYlC,QAAQ,KAAKmC,MAAO,WAAhC,gBACA7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACIU,UAAQ,EACRT,MAAOtF,EACPuF,SAhGpB,SAAgCnC,GAC5BnD,EAAemD,EAAMoC,OAAOF,QAgGZrC,QAAQ,WACRvB,GAAG,sBACH+D,YAAa,SAAAC,GAAQ,OAAIjE,EAAaiE,KACrCnG,EAAMK,UAAUY,IAAI,SAAAqB,GAAG,OACpBU,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAUC,IAAK/D,EAAIjB,IAAK0E,MAAOzD,EAAIjB,KAC/B2B,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAcC,QAASrE,EAAaI,EAAIjB,YAMxD2B,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAajC,QAAQ,WAAWN,UAAWnD,EAAQL,aAC/CoD,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYlC,QAAQ,KAAKmC,MAAO,WAAhC,YACA7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACIU,UAAQ,EACRT,MAAO/E,EACPgF,SA9GpB,SAA6BnC,GACzBtC,EAAYsC,EAAMoC,OAAOF,QA8GTrC,QAAQ,WACRvB,GAAG,kBACH+D,YAAa,SAAAC,GAAQ,OAAIvD,EAAYuD,KACpCnF,EAASC,IAAI,SAAAG,GAAG,OACb4B,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAUC,IAAKjF,EAAIC,IAAK0E,MAAO3E,EAAIC,KAC/B2B,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAcC,QAAS3D,EAAYxB,EAAIC,wFC7JjEoF,EAAM,gDAENC,EAAaC,YAAe,CAChCC,QAAS,CACPL,QAAS,CACPM,KAAM,UACNC,aAAc,YCApBC,IAASC,OAAOhE,EAAAC,EAAAC,cDIC,WAAmB,IAAAhD,EACLC,mBAAS,IADJG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACzB+G,EADyB3G,EAAA,GAClB4G,EADkB5G,EAAA,GAAAK,EAEGR,mBAAS,IAFZU,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEzBN,EAFyBQ,EAAA,GAEdsG,EAFctG,EAAA,GAAAE,EAGCZ,mBAAS,IAHVmB,EAAAf,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGzBC,EAHyBM,EAAA,GAGf8F,EAHe9F,EAAA,GAAAE,EAIIrB,oBAAS,GAJbsB,EAAAlB,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,GAIzB6F,EAJyB5F,EAAA,GAIb6F,EAJa7F,EAAA,GAmBlC,OAbE8F,oBAAW,YACM,eAAAxD,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAA0D,EAAAhB,EAAAiB,KAAG,SAAAC,IAAA,IAAAqD,EAAAlF,EAAAlB,EAAA,OAAA6C,EAAAhB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEC,IAAMiD,IAAIhB,EAAM,aADlB,cACVe,EADUnD,EAAAqD,KAEhBR,EAAUM,EAAI3C,MAFER,EAAAE,KAAA,EAGEC,IAAMiD,IAAIhB,EAAM,aAHlB,cAGVnE,EAHU+B,EAAAqD,KAIhBP,EAAc7E,EAAIuC,MAJFR,EAAAE,KAAA,GAKEC,IAAMiD,IAAIhB,EAAM,YALlB,QAKVrF,EALUiD,EAAAqD,KAMhBN,EAAahG,EAAIyD,MACjByC,GAAc,GAPE,yBAAAjD,EAAAU,SAAAZ,MAAH,yBAAAJ,EAAAiB,MAAAC,KAAAC,YAAA,EASfyC,IACC,IAGD3E,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAkB7D,MAAOsH,GACzB1D,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACE7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQC,SAAS,YACf/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMC,GAAG,IAAIxE,QAAQ,KAAKmC,MAAM,eAAhC,iCAIF7C,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAKC,QAAQ,OACRC,aAAa,aACbC,cAAc,MACdC,SAAS,QAEZlB,EAAaJ,EAAMhG,IAAI,SAAAuH,GAAI,OACnBxF,EAAAC,EAAAC,cAACnD,EAAD,CACIsG,IAAKmC,EAAKnH,IACVjB,KAAMoI,EACNnI,UAAWA,EACXW,SAAUA,EACV0D,IAAK+B,MAAWzD,EAAAC,EAAAC,cAAA,mCC3CxB,MAAauF,SAASC,cAAc","file":"static/js/main.f08afd25.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: 300,\n        margin: theme.spacing(1),\n    },\n\n    SaveButton: {\n        padding: theme.spacing(1),\n    },\n    \n    typography: {\n        padding: theme.spacing(2)\n    },\n\n    formControl: {\n        maxWidth: '100%',\n        minWidth: 100,\n        marginBottom: theme.spacing(2)\n    }\n}));\n\n\nexport default function TeamInfo(props) {\n    const classes = useStyles();\n    const [TeamMembers, setTeamMembers] = useState(props.Team.Employees);\n    const [TeamLead, setTeamLead] = useState(props.Team.TeamLead);\n    const [Projects, setProjects] = useState(props.Team.Projects.map(assignedID => props.Projects.find(prj => prj._id === assignedID)));\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [updatePopover, savedPopover] = useState(\" \");\n    const open = Boolean(anchorEl);\n    const id = null;\n\n    function handleTeamLeadChange(event) {\n        setTeamLead(event.target.value)\n    }\n    function handleTeamMemberChange(event) {\n        setTeamMembers(event.target.value)\n    }\n    function handleProjectChange(event) {\n        setProjects(event.target.value)\n    }\n    function handleClose(event) {\n        setAnchorEl(null);\n    }\n\n    function EmployeeName(id) {\n        if (Array.isArray(id)) \n            return id.map(_id => props.Employees.find(emp => emp._id === _id)).map(employee => employee.FirstName + ' ' +  employee.LastName).join(', ');\n        let locateEmployee = props.Employees.find(emp => emp._id === id);\n        if (locateEmployee) \n            return locateEmployee.FirstName + ' ' + locateEmployee.LastName;\n        return `The input employee id is invalid. Please enter valid employee id.`;\n    }\n  \n    function ProjectName(id) {\n        if (Array.isArray(id)) {\n            let assignedProjects = id.map((assignedPrj => props.Projects.find(prj => prj._id === assignedPrj._id)));\n            if (assignedProjects) \n                return assignedProjects.map(assignedPrj => assignedPrj.ProjectName).join(', ');\n\n        } else {\n            let assignedProject = props.Projects.find(prj => prj._id === id);\n            if (assignedProject) \n                return assignedProject.ProjectName;\n            return `The project name is invalid. Please enter valid project name.`;\n        }\n    }\n    function handleSave(event) {\n        setAnchorEl(event.currentTarget);\n        const putData = async () => {\n           \n            await axios.put(props.Url + 'team/' + props.Team._id,\n                {\n                    Projects,\n                    Employees: TeamMembers,\n                    TeamLead\n                })\n                .then(response => savedPopover(response.data.message));\n        };\n        putData();\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title={props.Team.TeamName}\n                        action={\n                            <div>\n                                <Button variant=\"outlined\" className={classes.button} onClick={handleSave}>\n                                Save</Button>\n                                \n                                <Popover\n                                    id={id}\n                                    open={open}\n                                    anchorEl={anchorEl}\n                                    onClose={handleClose}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                    }}>\n                                    {updatePopover}\n                                </Popover>\n                            </div>\n                        }>\n            </CardHeader>\n\n            <CardContent>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <Typography variant=\"h6\" color =\"inherit\" >Team Lead</Typography>\n                    <Select\n                        value={TeamLead}\n                        onChange={handleTeamLeadChange}\n                        variant=\"outlined\"\n                        id=\"team-lead-select\"\n                        renderValue={selected => EmployeeName(selected)}>\n                        {props.Employees.map(emp =>\n                                <MenuItem key={emp._id} value={emp._id}>\n                                    <ListItemText primary={EmployeeName(emp._id)} />\n                                </MenuItem>)\n                        }\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <Typography variant=\"h6\" color =\"inherit\" >Team Members</Typography>\n                    <Select\n                        multiple\n                        value={TeamMembers}\n                        onChange={handleTeamMemberChange}\n                        variant=\"outlined\"\n                        id=\"team-members-select\"                       \n                        renderValue={selected => EmployeeName(selected)}>\n                        {props.Employees.map(emp =>\n                            <MenuItem key={emp._id} value={emp._id}>\n                                <ListItemText primary={EmployeeName(emp._id)} />\n                            </MenuItem>\n                        )}\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <Typography variant=\"h6\" color =\"inherit\" >Projects</Typography>\n                    <Select\n                        multiple\n                        value={Projects}\n                        onChange={handleProjectChange}\n                        variant=\"outlined\"\n                        id=\"projects-select\"                        \n                        renderValue={selected => ProjectName(selected)}>\n                        {Projects.map(prj =>\n                            <MenuItem key={prj._id} value={prj._id}>\n                                <ListItemText primary={ProjectName(prj._id)} />\n                            </MenuItem>\n                        )}\n                    </Select>\n                </FormControl>\n            </CardContent>\n        </Card>\n    );\n}\n\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport TeamInfo from './components/TeamInfo'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nconst url = \"https://siyi-web422-assignment.herokuapp.com/\";\n\nconst TitleTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#cabaea',\n      contrastText: 'black',\n    },\n    }});\n\n  export default function TeamApp() {\n    const [Teams, loadTeams] = useState([]);\n    const [Employees, loadEmployees] = useState([]);\n    const [Projects, loadProjects] = useState([]);\n    const [LoadStatus, setLoadStatus] = useState(false);\n\n    useEffect( () => {\n      const fetchData = async () => {\n        const tms = await axios.get(url + 'teams-raw');\n        loadTeams(tms.data);\n        const emp = await axios.get(url + 'employees');\n        loadEmployees(emp.data);\n        const prj = await axios.get(url + 'projects');\n        loadProjects(prj.data);\n        setLoadStatus(true);\n      };\n      fetchData();\n    }, []);\n\n  return (\n      <MuiThemeProvider theme={TitleTheme}>\n      <Container>\n        <AppBar position=\"relative\"> \n          <Toolbar >\n            <Link to=\"#\" variant=\"h5\" color=\"textPrimary\">Assignment 3 - Team Details</Link>\n          </Toolbar>\n        </AppBar>\n       \n          <Box display=\"flex\"\n               alignContent=\"flex-start\"\n               flexDirection=\"row\"\n               flexWrap=\"wrap\">\n\n          { LoadStatus ? Teams.map(team =>\n                    <TeamInfo\n                        key={team._id}\n                        Team={team}\n                        Employees={Employees}\n                        Projects={Projects}\n                        Url={url}/>) : (<p>Program is loading</p>)}\n            </Box>\n      </Container>\n    </MuiThemeProvider>\n    );\n}","/*********************************************************************************\n* WEB422 – Assignment 03\n* I declare that this assignment is my own work in accordance with Seneca Academic Policy. No part\nof this\n* assignment has been copied manually or electronically from any other source (including web sites)\nor\n* distributed to other students.\n*\n* Name: ______Siyi Yuan________________ Student ID: __152110177____________ Date: ____June-16____________\n*\n********************************************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TeamApp from './TeamApp';\n\n\nReactDOM.render(<TeamApp />, document.querySelector('#root'));\n\n\n"],"sourceRoot":""}